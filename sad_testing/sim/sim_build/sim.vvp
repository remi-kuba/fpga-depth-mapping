#! /opt/homebrew/Cellar/icarus-verilog/12.0/bin/vvp
:ivl_version "12.0 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/system.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/vhdl_sys.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/vhdl_textio.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/v2005_math.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/va_math.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/v2009.vpi";
S_0x120e17370 .scope package, "$unit" "$unit" 2 1;
 .timescale -9 -12;
S_0x120e174e0 .scope module, "sad" "sad" 3 5;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "clk_in";
    .port_info 1 /INPUT 1 "rst_in";
    .port_info 2 /INPUT 24 "left_data_in";
    .port_info 3 /INPUT 24 "right_data_in";
    .port_info 4 /INPUT 11 "hcount_in";
    .port_info 5 /INPUT 10 "vcount_in";
    .port_info 6 /INPUT 1 "data_valid_in";
    .port_info 7 /OUTPUT 1 "data_valid_out";
    .port_info 8 /OUTPUT 1 "busy_out";
    .port_info 9 /OUTPUT 10 "hcount_out";
    .port_info 10 /OUTPUT 9 "vcount_out";
    .port_info 11 /OUTPUT 8 "line_out";
    .port_info 12 /OUTPUT 4 "offset_out";
    .port_info 13 /OUTPUT 120 "diffs_out";
P_0x120e17650 .param/l "KERNEL_SIZE" 1 3 25, +C4<0000000000000000000000000000000000000000000000000000000000001001>;
P_0x120e17690 .param/l "KERNEL_WIDTH" 1 3 23, +C4<00000000000000000000000000000011>;
P_0x120e176d0 .param/l "OFFSET" 1 3 27, +C4<00000000000000000000000000001010>;
P_0x120e17710 .param/l "RIGHT_CACHE_SIZE" 1 3 26, +C4<00000000000000000000000000000000000000000000000000000000000100111>;
P_0x120e17750 .param/l "RIGHT_OFFSET" 1 3 24, +C4<0000000000000000000000000000000000000000000000000000000000011110>;
v0x120e28690_0 .var "best_offset", 3 0;
v0x120e28750_0 .var "block_offset", 4 0;
v0x120e28800_0 .var "busy_out", 0 0;
v0x120e288b0_0 .var "calc_depth", 0 0;
o0x128018190 .functor BUFZ 1, C4<z>; HiZ drive
v0x120e28950_0 .net "clk_in", 0 0, o0x128018190;  0 drivers
v0x120e28a30_0 .var "curr_offset", 3 0;
o0x1280181f0 .functor BUFZ 1, C4<z>; HiZ drive
v0x120e28ae0_0 .net "data_valid_in", 0 0, o0x1280181f0;  0 drivers
v0x120e28b80_0 .var "data_valid_out", 0 0;
L_0x128050010 .functor BUFT 1, C4<1111111111100101110011001011001010011001011111110110011001001100001100110001100100000000>, C4<0>, C4<0>, C4<0>;
v0x120e28c20_0 .net "depth", 87 0, L_0x128050010;  1 drivers
v0x120e28d40_0 .var "diff", 11 0;
v0x120e28df0 .array "diffs_out", 0 9, 11 0;
o0x1280182b0 .functor BUFZ 11, C4<zzzzzzzzzzz>; HiZ drive
v0x120e28e90_0 .net "hcount_in", 10 0, o0x1280182b0;  0 drivers
v0x120e28f40_0 .var "hcount_out", 9 0;
v0x120e28ff0_0 .var "hcount_pl", 9 0;
v0x120e290a0_0 .var "left_cache", 71 0;
o0x128018370 .functor BUFZ 24, C4<zzzzzzzzzzzzzzzzzzzzzzzz>; HiZ drive
v0x120e29160_0 .net "left_data_in", 23 0, o0x128018370;  0 drivers
v0x120e29220_0 .var "line_out", 7 0;
v0x120e293b0_0 .var "offset_out", 3 0;
v0x120e29440_0 .var "recent_diff", 11 0;
v0x120e294f0_0 .var "right_cache", 311 0;
o0x128018460 .functor BUFZ 24, C4<zzzzzzzzzzzzzzzzzzzzzzzz>; HiZ drive
v0x120e295b0_0 .net "right_data_in", 23 0, o0x128018460;  0 drivers
o0x128018490 .functor BUFZ 1, C4<z>; HiZ drive
v0x120e29670_0 .net "rst_in", 0 0, o0x128018490;  0 drivers
v0x120e29710_0 .var "smallest_diff", 11 0;
v0x120e297c0_0 .var "val", 8 0;
o0x128018520 .functor BUFZ 10, C4<zzzzzzzzzz>; HiZ drive
v0x120e29870_0 .net "vcount_in", 9 0, o0x128018520;  0 drivers
v0x120e29920_0 .var "vcount_out", 8 0;
v0x120e299d0_0 .var "vcount_pl", 8 0;
E_0x120e177d0 .event posedge, v0x120e28950_0;
E_0x120e17810/0 .event anyedge, v0x120e28800_0, v0x120e290a0_0, v0x120e28750_0, v0x120e294f0_0;
E_0x120e17810/1 .event anyedge, v0x120e297c0_0, v0x120e28ae0_0, v0x120e29160_0, v0x120e294f0_0;
E_0x120e17810/2 .event anyedge, v0x120e29160_0, v0x120e294f0_0, v0x120e29160_0, v0x120e294f0_0;
E_0x120e17810 .event/or E_0x120e17810/0, E_0x120e17810/1, E_0x120e17810/2;
S_0x120e17df0 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 98, 3 98 0, S_0x120e174e0;
 .timescale -9 -12;
v0x120e17f60_0 .var/2s "i", 31 0;
S_0x120e27f20 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 3 105, 3 105 0, S_0x120e174e0;
 .timescale -9 -12;
v0x120e280f0_0 .var/2s "i", 31 0;
S_0x120e28180 .scope begin, "$ivl_for_loop2" "$ivl_for_loop2" 3 166, 3 166 0, S_0x120e174e0;
 .timescale -9 -12;
v0x120e28360_0 .var/2s "i", 31 0;
S_0x120e28410 .scope begin, "$ivl_for_loop3" "$ivl_for_loop3" 3 169, 3 169 0, S_0x120e174e0;
 .timescale -9 -12;
v0x120e285d0_0 .var/2s "i", 31 0;
S_0x120e17c80 .scope module, "cocotb_iverilog_dump" "cocotb_iverilog_dump" 4 1;
 .timescale -9 -12;
    .scope S_0x120e174e0;
T_0 ;
Ewait_0 .event/or E_0x120e17810, E_0x0;
    %wait Ewait_0;
    %load/vec4 v0x120e28800_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.0, 8;
    %pushi/vec4 0, 0, 12;
    %store/vec4 v0x120e28d40_0, 0, 12;
    %fork t_1, S_0x120e17df0;
    %jmp t_0;
    .scope S_0x120e17df0;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x120e17f60_0, 0, 32;
T_0.2 ;
    %load/vec4 v0x120e17f60_0;
    %pad/s 64;
    %cmpi/s 9, 0, 64;
    %jmp/0xz T_0.3, 5;
    %load/vec4 v0x120e290a0_0;
    %load/vec4 v0x120e17f60_0;
    %pad/s 35;
    %muli 8, 0, 35;
    %part/s 8;
    %pad/u 9;
    %load/vec4 v0x120e294f0_0;
    %load/vec4 v0x120e17f60_0;
    %load/vec4 v0x120e28750_0;
    %pad/u 32;
    %add;
    %pad/u 35;
    %muli 8, 0, 35;
    %part/u 8;
    %pad/u 9;
    %sub;
    %store/vec4 v0x120e297c0_0, 0, 9;
    %load/vec4 v0x120e297c0_0;
    %parti/s 1, 8, 5;
    %pad/u 32;
    %cmpi/e 1, 0, 32;
    %flag_mov 8, 4;
    %jmp/0 T_0.4, 8;
    %load/vec4 v0x120e297c0_0;
    %inv;
    %addi 1, 0, 9;
    %jmp/1 T_0.5, 8;
T_0.4 ; End of true expr.
    %load/vec4 v0x120e297c0_0;
    %jmp/0 T_0.5, 8;
 ; End of false expr.
    %blend;
T_0.5;
    %store/vec4 v0x120e297c0_0, 0, 9;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x120e28d40_0;
    %load/vec4 v0x120e297c0_0;
    %pad/u 12;
    %add;
    %store/vec4 v0x120e28d40_0, 0, 12;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x120e17f60_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x120e17f60_0, 0, 32;
    %jmp T_0.2;
T_0.3 ;
    %end;
    .scope S_0x120e174e0;
t_0 %join;
    %jmp T_0.1;
T_0.0 ;
    %load/vec4 v0x120e28ae0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.6, 8;
    %pushi/vec4 0, 0, 12;
    %store/vec4 v0x120e28d40_0, 0, 12;
    %fork t_3, S_0x120e27f20;
    %jmp t_2;
    .scope S_0x120e27f20;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x120e280f0_0, 0, 32;
T_0.8 ;
    %load/vec4 v0x120e280f0_0;
    %pad/s 64;
    %cmpi/s 6, 0, 64;
    %jmp/0xz T_0.9, 5;
    %load/vec4 v0x120e290a0_0;
    %load/vec4 v0x120e280f0_0;
    %pad/s 35;
    %muli 8, 0, 35;
    %part/s 8;
    %pad/u 9;
    %load/vec4 v0x120e294f0_0;
    %load/vec4 v0x120e280f0_0;
    %pad/s 64;
    %addi 33, 0, 64;
    %pad/s 67;
    %muli 8, 0, 67;
    %part/s 8;
    %pad/u 9;
    %sub;
    %store/vec4 v0x120e297c0_0, 0, 9;
    %load/vec4 v0x120e297c0_0;
    %parti/s 1, 8, 5;
    %pad/u 32;
    %cmpi/e 1, 0, 32;
    %flag_mov 8, 4;
    %jmp/0 T_0.10, 8;
    %load/vec4 v0x120e297c0_0;
    %inv;
    %addi 1, 0, 9;
    %jmp/1 T_0.11, 8;
T_0.10 ; End of true expr.
    %load/vec4 v0x120e297c0_0;
    %jmp/0 T_0.11, 8;
 ; End of false expr.
    %blend;
T_0.11;
    %store/vec4 v0x120e297c0_0, 0, 9;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x120e28d40_0;
    %load/vec4 v0x120e297c0_0;
    %pad/u 12;
    %add;
    %store/vec4 v0x120e28d40_0, 0, 12;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x120e280f0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x120e280f0_0, 0, 32;
    %jmp T_0.8;
T_0.9 ;
    %end;
    .scope S_0x120e174e0;
t_2 %join;
    %load/vec4 v0x120e29160_0;
    %parti/s 8, 0, 2;
    %pad/u 9;
    %load/vec4 v0x120e294f0_0;
    %parti/s 8, 256, 10;
    %pad/u 9;
    %sub;
    %store/vec4 v0x120e297c0_0, 0, 9;
    %load/vec4 v0x120e297c0_0;
    %parti/s 1, 8, 5;
    %pad/u 32;
    %cmpi/e 1, 0, 32;
    %flag_mov 8, 4;
    %jmp/0 T_0.12, 8;
    %load/vec4 v0x120e297c0_0;
    %inv;
    %addi 1, 0, 9;
    %jmp/1 T_0.13, 8;
T_0.12 ; End of true expr.
    %load/vec4 v0x120e297c0_0;
    %jmp/0 T_0.13, 8;
 ; End of false expr.
    %blend;
T_0.13;
    %store/vec4 v0x120e297c0_0, 0, 9;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x120e28d40_0;
    %load/vec4 v0x120e297c0_0;
    %pad/u 12;
    %add;
    %store/vec4 v0x120e28d40_0, 0, 12;
    %load/vec4 v0x120e29160_0;
    %parti/s 8, 8, 5;
    %pad/u 9;
    %load/vec4 v0x120e294f0_0;
    %parti/s 8, 248, 9;
    %pad/u 9;
    %sub;
    %store/vec4 v0x120e297c0_0, 0, 9;
    %load/vec4 v0x120e297c0_0;
    %parti/s 1, 8, 5;
    %pad/u 32;
    %cmpi/e 1, 0, 32;
    %flag_mov 8, 4;
    %jmp/0 T_0.14, 8;
    %load/vec4 v0x120e297c0_0;
    %inv;
    %addi 1, 0, 9;
    %jmp/1 T_0.15, 8;
T_0.14 ; End of true expr.
    %load/vec4 v0x120e297c0_0;
    %jmp/0 T_0.15, 8;
 ; End of false expr.
    %blend;
T_0.15;
    %store/vec4 v0x120e297c0_0, 0, 9;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x120e28d40_0;
    %load/vec4 v0x120e297c0_0;
    %pad/u 12;
    %add;
    %store/vec4 v0x120e28d40_0, 0, 12;
    %load/vec4 v0x120e29160_0;
    %parti/s 8, 16, 6;
    %pad/u 9;
    %load/vec4 v0x120e294f0_0;
    %parti/s 8, 240, 9;
    %pad/u 9;
    %sub;
    %store/vec4 v0x120e297c0_0, 0, 9;
    %load/vec4 v0x120e297c0_0;
    %parti/s 1, 8, 5;
    %pad/u 32;
    %cmpi/e 1, 0, 32;
    %flag_mov 8, 4;
    %jmp/0 T_0.16, 8;
    %load/vec4 v0x120e297c0_0;
    %inv;
    %addi 1, 0, 9;
    %jmp/1 T_0.17, 8;
T_0.16 ; End of true expr.
    %load/vec4 v0x120e297c0_0;
    %jmp/0 T_0.17, 8;
 ; End of false expr.
    %blend;
T_0.17;
    %store/vec4 v0x120e297c0_0, 0, 9;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x120e28d40_0;
    %load/vec4 v0x120e297c0_0;
    %pad/u 12;
    %add;
    %store/vec4 v0x120e28d40_0, 0, 12;
    %jmp T_0.7;
T_0.6 ;
    %pushi/vec4 0, 0, 9;
    %store/vec4 v0x120e297c0_0, 0, 9;
    %pushi/vec4 0, 0, 12;
    %store/vec4 v0x120e28d40_0, 0, 12;
T_0.7 ;
T_0.1 ;
    %jmp T_0;
    .thread T_0, $push;
    .scope S_0x120e174e0;
T_1 ;
    %wait E_0x120e177d0;
    %load/vec4 v0x120e29670_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.0, 8;
    %pushi/vec4 0, 0, 72;
    %assign/vec4 v0x120e290a0_0, 0;
    %pushi/vec4 0, 0, 312;
    %assign/vec4 v0x120e294f0_0, 0;
    %pushi/vec4 10, 0, 4;
    %assign/vec4 v0x120e28a30_0, 0;
    %pushi/vec4 10, 0, 4;
    %assign/vec4 v0x120e28690_0, 0;
    %pushi/vec4 4095, 0, 12;
    %assign/vec4 v0x120e29710_0, 0;
    %pushi/vec4 0, 0, 5;
    %assign/vec4 v0x120e28750_0, 0;
    %pushi/vec4 0, 0, 12;
    %assign/vec4 v0x120e29440_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x120e288b0_0, 0;
    %pushi/vec4 0, 0, 10;
    %assign/vec4 v0x120e28ff0_0, 0;
    %pushi/vec4 0, 0, 9;
    %assign/vec4 v0x120e299d0_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x120e28b80_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x120e28800_0, 0;
    %pushi/vec4 0, 0, 10;
    %assign/vec4 v0x120e28f40_0, 0;
    %pushi/vec4 0, 0, 9;
    %assign/vec4 v0x120e29920_0, 0;
    %pushi/vec4 0, 0, 8;
    %assign/vec4 v0x120e29220_0, 0;
    %pushi/vec4 0, 0, 4;
    %assign/vec4 v0x120e293b0_0, 0;
    %jmp T_1.1;
T_1.0 ;
    %load/vec4 v0x120e28800_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.2, 8;
    %pushi/vec4 0, 0, 32;
    %load/vec4 v0x120e28a30_0;
    %pad/u 32;
    %cmp/u;
    %flag_get/vec4 5;
    %assign/vec4 v0x120e28800_0, 0;
    %load/vec4 v0x120e28a30_0;
    %pad/u 32;
    %pushi/vec4 0, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %assign/vec4 v0x120e288b0_0, 0;
    %load/vec4 v0x120e28a30_0;
    %pad/u 32;
    %cmpi/u 0, 0, 32;
    %flag_or 5, 4; GT is !LE
    %flag_inv 5;
    %flag_mov 8, 5;
    %jmp/0 T_1.4, 8;
    %load/vec4 v0x120e28a30_0;
    %pad/u 32;
    %subi 1, 0, 32;
    %jmp/1 T_1.5, 8;
T_1.4 ; End of true expr.
    %pushi/vec4 10, 0, 32;
    %jmp/0 T_1.5, 8;
 ; End of false expr.
    %blend;
T_1.5;
    %pad/u 4;
    %assign/vec4 v0x120e28a30_0, 0;
    %load/vec4 v0x120e28750_0;
    %pad/u 32;
    %subi 3, 0, 32;
    %pad/u 5;
    %assign/vec4 v0x120e28750_0, 0;
    %load/vec4 v0x120e28ff0_0;
    %assign/vec4 v0x120e28f40_0, 0;
    %load/vec4 v0x120e299d0_0;
    %assign/vec4 v0x120e29920_0, 0;
    %load/vec4 v0x120e28d40_0;
    %load/vec4 v0x120e29710_0;
    %cmp/u;
    %flag_or 5, 4;
    %jmp/0xz  T_1.6, 5;
    %load/vec4 v0x120e28d40_0;
    %assign/vec4 v0x120e29710_0, 0;
    %load/vec4 v0x120e28a30_0;
    %assign/vec4 v0x120e28690_0, 0;
T_1.6 ;
    %load/vec4 v0x120e28d40_0;
    %assign/vec4 v0x120e29440_0, 0;
    %load/vec4 v0x120e28d40_0;
    %load/vec4 v0x120e28a30_0;
    %pad/u 5;
    %ix/vec4 3;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v0x120e28df0, 0, 4;
    %jmp T_1.3;
T_1.2 ;
    %load/vec4 v0x120e28ae0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.8, 8;
    %load/vec4 v0x120e28e90_0;
    %pad/u 10;
    %assign/vec4 v0x120e28ff0_0, 0;
    %load/vec4 v0x120e29870_0;
    %pad/u 9;
    %assign/vec4 v0x120e299d0_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x120e28800_0, 0;
    %fork t_5, S_0x120e28180;
    %jmp t_4;
    .scope S_0x120e28180;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x120e28360_0, 0, 32;
T_1.10 ;
    %load/vec4 v0x120e28360_0;
    %pad/s 64;
    %cmpi/s 6, 0, 64;
    %jmp/0xz T_1.11, 5;
    %load/vec4 v0x120e290a0_0;
    %load/vec4 v0x120e28360_0;
    %pad/s 35;
    %muli 8, 0, 35;
    %part/s 8;
    %ix/load 5, 0, 0;
    %load/vec4 v0x120e28360_0;
    %addi 3, 0, 32;
    %pad/s 35;
    %muli 8, 0, 35;
    %ix/vec4/s 4;
    %assign/vec4/off/d v0x120e290a0_0, 4, 5;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x120e28360_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x120e28360_0, 0, 32;
    %jmp T_1.10;
T_1.11 ;
    %end;
    .scope S_0x120e174e0;
t_4 %join;
    %fork t_7, S_0x120e28410;
    %jmp t_6;
    .scope S_0x120e28410;
t_7 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x120e285d0_0, 0, 32;
T_1.12 ;
    %load/vec4 v0x120e285d0_0;
    %pad/s 65;
    %cmpi/s 36, 0, 65;
    %jmp/0xz T_1.13, 5;
    %load/vec4 v0x120e294f0_0;
    %load/vec4 v0x120e285d0_0;
    %pad/s 35;
    %muli 8, 0, 35;
    %part/s 8;
    %ix/load 5, 0, 0;
    %load/vec4 v0x120e285d0_0;
    %addi 3, 0, 32;
    %pad/s 35;
    %muli 8, 0, 35;
    %ix/vec4/s 4;
    %assign/vec4/off/d v0x120e294f0_0, 4, 5;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x120e285d0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x120e285d0_0, 0, 32;
    %jmp T_1.12;
T_1.13 ;
    %end;
    .scope S_0x120e174e0;
t_6 %join;
    %load/vec4 v0x120e29160_0;
    %parti/s 8, 0, 2;
    %ix/load 4, 16, 0;
    %ix/load 5, 0, 0;
    %flag_set/imm 4, 0;
    %assign/vec4/off/d v0x120e290a0_0, 4, 5;
    %load/vec4 v0x120e29160_0;
    %parti/s 8, 8, 5;
    %ix/load 4, 8, 0;
    %ix/load 5, 0, 0;
    %flag_set/imm 4, 0;
    %assign/vec4/off/d v0x120e290a0_0, 4, 5;
    %load/vec4 v0x120e29160_0;
    %parti/s 8, 16, 6;
    %ix/load 4, 0, 0;
    %ix/load 5, 0, 0;
    %flag_set/imm 4, 0;
    %assign/vec4/off/d v0x120e290a0_0, 4, 5;
    %load/vec4 v0x120e295b0_0;
    %parti/s 8, 0, 2;
    %ix/load 4, 16, 0;
    %ix/load 5, 0, 0;
    %flag_set/imm 4, 0;
    %assign/vec4/off/d v0x120e294f0_0, 4, 5;
    %load/vec4 v0x120e295b0_0;
    %parti/s 8, 8, 5;
    %ix/load 4, 8, 0;
    %ix/load 5, 0, 0;
    %flag_set/imm 4, 0;
    %assign/vec4/off/d v0x120e294f0_0, 4, 5;
    %load/vec4 v0x120e295b0_0;
    %parti/s 8, 16, 6;
    %ix/load 4, 0, 0;
    %ix/load 5, 0, 0;
    %flag_set/imm 4, 0;
    %assign/vec4/off/d v0x120e294f0_0, 4, 5;
    %load/vec4 v0x120e28d40_0;
    %assign/vec4 v0x120e29710_0, 0;
    %load/vec4 v0x120e28d40_0;
    %assign/vec4 v0x120e29440_0, 0;
    %load/vec4 v0x120e28d40_0;
    %load/vec4 v0x120e28a30_0;
    %pad/u 5;
    %ix/vec4 3;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v0x120e28df0, 0, 4;
    %pushi/vec4 10, 0, 4;
    %assign/vec4 v0x120e28690_0, 0;
    %load/vec4 v0x120e28a30_0;
    %subi 1, 0, 4;
    %assign/vec4 v0x120e28a30_0, 0;
    %pushi/vec4 30, 0, 5;
    %assign/vec4 v0x120e28750_0, 0;
T_1.8 ;
T_1.3 ;
T_1.1 ;
    %load/vec4 v0x120e288b0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.14, 8;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x120e28b80_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x120e288b0_0, 0;
    %load/vec4 v0x120e28c20_0;
    %load/vec4 v0x120e28690_0;
    %pad/u 7;
    %muli 8, 0, 7;
    %part/u 8;
    %assign/vec4 v0x120e29220_0, 0;
    %load/vec4 v0x120e28690_0;
    %assign/vec4 v0x120e293b0_0, 0;
    %jmp T_1.15;
T_1.14 ;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x120e28b80_0, 0;
T_1.15 ;
    %jmp T_1;
    .thread T_1;
    .scope S_0x120e17c80;
T_2 ;
    %vpi_call/w 4 3 "$dumpfile", "/Users/remi/Desktop/fpga-depth-mapping/sad_testing/sim/sim_build/sad.fst" {0 0 0};
    %vpi_call/w 4 4 "$dumpvars", 32'sb00000000000000000000000000000000, S_0x120e174e0 {0 0 0};
    %end;
    .thread T_2;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "/Users/remi/Desktop/fpga-depth-mapping/sad_testing/hdl/sad.sv";
    "/Users/remi/Desktop/fpga-depth-mapping/sad_testing/sim/sim_build/cocotb_iverilog_dump.v";
